[package]
name = "goxlr-daemon"
version = "1.2.2"
edition = "2021"
authors = ["Nathan Adams <dinnerbone@dinnerbone.com>", "Craig McLure <craig@mclure.net>", "Lars MÃ¼hlbauer <lm41@dismail.de>"]
description = "Allows control of a TC-Helicon GoXLR or GoXLR Mini, by maintaining an interaction with it over USB in the background."
repository = "https://github.com/GoXLR-on-Linux/GoXLR-Utility"
license = "MIT"
categories = ["hardware-support", "command-line-utilities"]

[features]
tts = ["dep:tts"]

[dependencies]
goxlr-usb = { path = "../usb" }
goxlr-ipc = { path = "../ipc" }
goxlr-types = { path = "../types" }
goxlr-audio = { path = "../audio" }
goxlr-profile-loader = { path = "../profile" }
goxlr-scribbles = { path = "../scribbles" }

log = "0.4.22"
simplelog = "0.12.2"
file-rotate = "0.7.6"
log-panics = { version = "2.1.0", features = ["with-backtrace"] }

tokio = { version = "1.39.1", features = ["full"] }
tokio-serde = "0.9.0"

anyhow = "1.0.86"
strum = { version = "0.26.3" }
enumset = "1.1.5"
serde = { version = "1.0.204", features = ["derive"] }
serde_json = { version = "1.0.120" }
directories = "5.0.1"
byteorder = "1.5.0"
enum-map = "2.7.3"
ritelinked = "0.3.2"
clap = { version = "4.5.11", features = ["derive"] }
opener = "0.7.1"
fancy-regex = "0.13.0"
chrono = { version = "0.4.38", default-features = false, features = ["clock"] }
glob = "0.3.1"
cfg-if = "1.0.0"
lazy_static = "1.5.0"
jsonpath-rust = "0.7.0"

tts = { version = "0.26.3", features = ["tolk"], optional = true }
interprocess = { version = "2.2.1", features = ["tokio"] }

notify = "6.1.1"
json-patch = "2.0.0"

which = "6.0.1"

# Language Determination..
sys-locale = "0.3.1"

## HTTPd Server
actix = "0.13.5"
actix-web-actors = "4.3.0"

# All we really need from actix-web are macros and compression, TLS and cookies aren't required
actix-web = { version = "4.8.0", default-features = false, features = ["macros", "compress-brotli", "compress-gzip"] }
actix-cors = "0.7.0"
mime_guess = "2.0.5"
include_dir = "0.7.4"
actix-multipart = "0.7.2"

# Used for Firmware Update Checks
reqwest = { version = "0.12.5", features = ["stream"] }
xmltree = "0.10.3"
futures = "0.3.30"
futures-util = "0.3.30"

[target.'cfg(target_family = "unix")'.dependencies]
nix = { version = "0.29.0", features = ["user"] }

# Under Linux, we use ksni for our tray icon..
[target.'cfg(target_os = "linux")'.dependencies]
ksni = { git = "https://github.com/talonvoice/ksni.git", branch = "zbus" }
rust-ini = "0.21.0"
#rand = "0.8.5"
shell-words = "1.1.0"
zbus = "4.4.0"

# Under Windows and MacOS, we use tao's tray feature
[target.'cfg(target_os = "windows")'.dependencies]
image = "0.25.2"
tasklist = { git = "https://github.com/yalishandar/tasklist-rs.git" }
winrt-notification = "0.5.1"
winreg = "0.52.0"
mslnk = "0.1.8"
dunce = "1.0.4"
windows-args = "0.2.0"

# Experimental Package..
windows = { version = "0.58.0", features = [
    "Win32_Foundation",
    "Win32_UI_Shell",
    "Win32_UI_Shell_Common",
    "Win32_UI_WindowsAndMessaging",
    "Win32_Graphics_Gdi",
    "Win32_System_LibraryLoader",
    "Win32_System_Shutdown",
    "Win32_System_RemoteDesktop"
] }

[target.'cfg(target_os = "macos")'.dependencies]
image = "0.25.2"
shell-words = "1.1.0"

# Used for Tray Handling
objc2-app-kit = "0.3.0"
objc2-foundation = "0.3.0"
dispatch2 = "0.2.0"
objc2 = "0.6.0"

# Used for Aggregate Device Management
coreaudio-sys = "0.2.15"
core-foundation = "0.10.0"
io-kit-sys = "0.4.1"

[build-dependencies]
clap = { version = "4.5.11", features = ["derive"] }
clap_complete = "4.5.11"
directories = "5.0.1"

[target.'cfg(target_os = "windows")'.build-dependencies]
windres = "0.2.2"

[package.metadata.deb]
name = "goxlr-utility"
assets = [
    ["../target/release/goxlr-daemon", "usr/bin/", "755"],
    ["../target/release/goxlr-client", "usr/bin/", "755"],
    ["../target/release/goxlr-defaults", "usr/bin/", "755"],
    ["../target/release/goxlr-launcher", "usr/bin/", "755"],
    ["../50-goxlr.rules", "etc/udev/rules.d/", "644"],
    ["../daemon/resources/goxlr-utility.png", "usr/share/icons/hicolor/48x48/apps/", "644"],
    ["../daemon/resources/goxlr-utility-large.png", "usr/share/pixmaps/goxlr-utility.png", "644"],
    ["../daemon/resources/goxlr-utility.svg", "usr/share/icons/hicolor/scalable/apps/", "644"],
    ["../daemon/resources/goxlr-utility.desktop", "usr/share/applications/", "644"],
    ["../deployment/deb/goxlr-client.bash", "usr/share/bash-completion/completions/", "644"],
    ["../deployment/deb/goxlr-client.fish", "usr/share/fish/vendor_completions.d/", "644"],
    ["../deployment/deb/_goxlr-client", "usr/share/zsh/vendor-completions/", "644"],
    ["../deployment/deb/goxlr-daemon.bash", "usr/share/bash-completion/completions/", "644"],
    ["../deployment/deb/goxlr-daemon.fish", "usr/share/fish/vendor_completions.d/", "644"],
    ["../deployment/deb/_goxlr-daemon", "usr/share/zsh/vendor-completions/", "644"],
]
maintainer-scripts = "../ci/distrib/DEBIAN/"
section = "sound"
priority = "optional"
depends = "$auto"
extended-description = """\
A utility for monitoring and controlling a TC-Helicon GoXLR or GoXLR Mini.
"""
revision = "1"

## cargo generate-rpm support..
[package.metadata.generate-rpm]
name = "goxlr-utility"
assets = [
    { source = "../target/release/goxlr-daemon", dest = "/usr/bin/goxlr-daemon", mode = "0755" },
    { source = "../target/release/goxlr-client", dest = "/usr/bin/goxlr-client", mode = "0755" },
    { source = "../target/release/goxlr-defaults", dest = "/usr/bin/goxlr-defaults", mode = "0755" },
    { source = "../target/release/goxlr-launcher", dest = "/usr/bin/goxlr-launcher", mode = "0755" },
    { source = "../50-goxlr.rules", dest = "/etc/udev/rules.d/50-goxlr.rules", mode = "0644" },
    { source = "../daemon/resources/goxlr-utility.png", dest = "/usr/share/icons/hicolor/48x48/apps/goxlr-utility.png", mode = "0644" },
    { source = "../daemon/resources/goxlr-utility-large.png", dest = "/usr/share/pixmaps/goxlr-utility.png", mode = "0644" },
    { source = "../daemon/resources/goxlr-utility.svg", dest = "/usr/share/icons/hicolor/scalable/apps/goxlr-utility.svg", mode = "0644" },
    { source = "../daemon/resources/goxlr-utility.desktop", dest = "/usr/share/applications/goxlr-utility.desktop", mode = "0644" },
    { source = "../deployment/deb/goxlr-client.bash", dest = "/usr/share/bash-completion/completions/goxlr-client.bash", mode = "0644" },
    { source = "../deployment/deb/goxlr-client.fish", dest = "/usr/share/fish/vendor_completions.d/goxlr-client.fish", mode = "0644" },
    { source = "../deployment/deb/_goxlr-client", dest = "/usr/share/zsh/vendor-completions/_goxlr-client", mode = "0644" },
    { source = "../deployment/deb/goxlr-daemon.bash", dest = "/usr/share/bash-completion/completions/goxlr-daemon.bash", mode = "0644" },
    { source = "../deployment/deb/goxlr-daemon.fish", dest = "/usr/share/fish/vendor_completions.d/goxlr-daemon.fish", mode = "0644" },
    { source = "../deployment/deb/_goxlr-daemon", dest = "/usr/share/zsh/vendor-completions/_goxlr-daemon", mode = "0644" },
]

# Tiny scriptlet, should reload udev if possible.
post_install_script = """
udevadm control --reload-rules || echo -e "\\033[0;31mReloading udev failed. You might need to reboot after installation.\\033[0m" 1>&2
udevadm trigger || echo -e "\\033[0;31mReloading udev failed. You might need to reboot after installation.\\033[0m" 1>&2
"""

#release = "1"

# Because we build under Ubuntu in CI, generate-rpm is unable to calculate the dependencies required (no access
# to rpm / yum), so we need to disable the auto and specify dependencies manually.
auto-req = "no"

[package.metadata.generate-rpm.requires]
# It should be noted, that bzip2 and libusb get statically linked against the binary, so they're not actually
# required, this leaves us with dbus and pulseaudio libs :)
dbus-libs = ">= 1.9.14"
pulseaudio-libs = ">= 10.0"

# Seriously Fedora?
"libspeechd.so.2()(64bit)" = "*"

[package.metadata.generate-rpm.variants.suse]
release = "suse"

# SuSE has the same general dependencies as anything RHEL
[package.metadata.generate-rpm.variants.suse.requires]
libdbus-1-3 = ">= 1.9.14"
libpulse0 = ">= 10.0"
speech-dispatcher = ">= 0.7"
